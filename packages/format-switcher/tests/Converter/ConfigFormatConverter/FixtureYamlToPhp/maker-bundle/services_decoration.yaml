services:
  Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClass:
    decorates: App\Mailer

  Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClassTwo:
    decorates: App\Mailer
    decoration_inner_name: App\DecoratingMailer.wooz
    decoration_priority: 5
    decoration_on_invalid: exception

  Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClassService:
    decorates: App\Mailer
    decoration_on_invalid: ignore
-----
<?php

namespace Symfony\Component\DependencyInjection\Loader\Configurator;

use Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClass;
use Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClassService;
use Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClassTwo;
use Symfony\Component\DependencyInjection\ContainerInterface;

return static function (ContainerConfigurator $containerConfigurator): void {
    $services = $containerConfigurator->services();

    $services->set(SimpleFakeClass::class)
        ->decorate('App\Mailer');

    $services->set(SimpleFakeClassTwo::class)
        ->decorate('App\Mailer', 'App\DecoratingMailer.wooz', 5, ContainerInterface::EXCEPTION_ON_INVALID_REFERENCE);

    $services->set(SimpleFakeClassService::class)
        ->decorate('App\Mailer', null, 0, ContainerInterface::IGNORE_ON_INVALID_REFERENCE);
};
