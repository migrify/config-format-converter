services:

  Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClassServiceTwo $shoutyTransformer: '@App\Util\UppercaseTransformer'

  Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClassService:
    arguments:
      - '@string'
      - ['isaevsgdbfhhnth', 1234561456545, 'jean@vgbsetgil.com']
      - 456
      -
        App\FooCommand: '@app.command_handler.foo'
        App\BarCommand: '@app.command_handler.bar'
      - !tagged_locator { tag: 'app.handler', index_by: 'key' }
      - !tagged_iterator app.handler

  Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClassTwo:
    arguments: [!tagged_locator { index_by: 'key', tag: 'app.handler', default_index_method: 'myOwnMethodName' }]

  Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClassServiceThree:
    arguments:
      $fake1: '@id.fake.service'
      $fake2: ['fake_argument', 123, 'jean@mail.com']

  site_update_manager.normal_users:
    class: Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClassThree
    arguments: ['@=service("App\Mail\MailerConfiguration").getMailerMethod()']
-----
<?php

namespace Symfony\Component\DependencyInjection\Loader\Configurator;

use Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClassService;
use Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClassServiceThree;
use Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClassServiceTwo;
use Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClassThree;
use Symfony\Bundle\MakerBundle\Tests\Util\yaml_php_convert_fixtures\FakeClass\SimpleFakeClassTwo;

return static function (ContainerConfigurator $containerConfigurator): void {
    $services = $containerConfigurator->services();

    $services->alias(SimpleFakeClassServiceTwo::class.' $shoutyTransformer', 'App\Util\UppercaseTransformer');

    $services->set(SimpleFakeClassService::class)
        ->args(['@string', ['isaevsgdbfhhnth', 1234561456545, 'jean@vgbsetgil.com'], 456, ['App\FooCommand' => '@app.command_handler.foo', 'App\BarCommand' => '@app.command_handler.bar'], 'tagged_locator(\'app.handler\', \'key\')', 'tagged_iterator(\'app.handler\')']);

    $services->set(SimpleFakeClassTwo::class)
        ->args(['tagged_locator(\'app.handler\', \'key\', \'myOwnMethodName\')']);

    $services->set(SimpleFakeClassServiceThree::class)
        ->arg('$fake1', 'service(\'id.fake.service\')')
        ->arg('$fake2', '[\'fake_argument\', 123, \'jean@mail.com\']');

    $services->set('site_update_manager.normal_users', SimpleFakeClassThree::class)
        ->args(['@=service("App\Mail\MailerConfiguration").getMailerMethod()']);
};
