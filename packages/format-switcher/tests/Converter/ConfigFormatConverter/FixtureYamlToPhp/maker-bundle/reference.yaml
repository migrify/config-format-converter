services:
  Migrify\ConfigTransformer\FormatSwitcher\Tests\Converter\ConfigFormatConverter\Source\FakeClass:
    arguments:
      - !service
        class: Migrify\ConfigTransformer\FormatSwitcher\Tests\Converter\ConfigFormatConverter\Source\ExistingClass

  Migrify\ConfigTransformer\FormatSwitcher\Tests\Converter\ConfigFormatConverter\Source\ThirdFakeClass:
    factory: [ !service { class: Migrify\ConfigTransformer\FormatSwitcher\Tests\Converter\ConfigFormatConverter\Source\ExistingClass }, 'constructFoo' ]
-----
<?php

namespace Symfony\Component\DependencyInjection\Loader\Configurator;

use Migrify\ConfigTransformer\FormatSwitcher\Tests\Converter\ConfigFormatConverter\Source\ExistingClass;
use Migrify\ConfigTransformer\FormatSwitcher\Tests\Converter\ConfigFormatConverter\Source\FakeClass;
use Migrify\ConfigTransformer\FormatSwitcher\Tests\Converter\ConfigFormatConverter\Source\ThirdFakeClass;

return static function (ContainerConfigurator $containerConfigurator): void {
    $services = $containerConfigurator->services();

    $services->set(FakeClass::class)
        ->args([service(ExistingClass::class)]);

    $services->set(ThirdFakeClass::class)
        ->factory([service(ExistingClass::class), 'constructFoo']);
};
