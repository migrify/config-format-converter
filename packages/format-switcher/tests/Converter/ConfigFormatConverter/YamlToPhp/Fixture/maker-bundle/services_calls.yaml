services:
  Migrify\ConfigTransformer\FormatSwitcher\Tests\Converter\ConfigFormatConverter\Source\FakeClass:
    calls:
      - [withMailer, ['@mailer'], false]
      - [setLogger, ['@logger']]
      - [setMailer, ['@mailer']]
      - { method: withMailer, arguments: ['@mailer', 'argument'], returns_clone: false }
      - setLogger: ['@logger']
      - setMailer: ['@mailer']
      - withLogger: !returns_clone ['@logger']
-----
<?php

declare(strict_types=1);

use Migrify\ConfigTransformer\FormatSwitcher\Tests\Converter\ConfigFormatConverter\Source\FakeClass;
use Symfony\Component\DependencyInjection\Loader\Configurator\ContainerConfigurator;
use function Symfony\Component\DependencyInjection\Loader\Configurator\ref;

return static function (ContainerConfigurator $containerConfigurator): void {
    $services = $containerConfigurator->services();

    $services->set(FakeClass::class)
        ->call('withMailer', [ref('mailer')], false)
        ->call('setLogger', [ref('logger')])
        ->call('setMailer', [ref('mailer')])
        ->call('withMailer', [ref('mailer'), 'argument'], false)
        ->call('setLogger', [ref('logger')])
        ->call('setMailer', [ref('mailer')])
        ->call('withLogger', [ref('logger')], true);
};
