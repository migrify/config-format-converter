services:
  Migrify\ConfigTransformer\Tests\Converter\ConfigFormatConverter\Source\FakeClass:
    decorates: App\Mailer

  Migrify\ConfigTransformer\Tests\Converter\ConfigFormatConverter\Source\SecondFakeClass:
    decorates: App\Mailer
    decoration_inner_name: App\DecoratingMailer.wooz
    decoration_priority: 5
    decoration_on_invalid: exception

  Migrify\ConfigTransformer\Tests\Converter\ConfigFormatConverter\Source\ThirdFakeClass:
    decorates: App\Mailer
    decoration_on_invalid: ignore
-----
<?php

declare(strict_types=1);

use Migrify\ConfigTransformer\Tests\Converter\ConfigFormatConverter\Source\FakeClass;
use Migrify\ConfigTransformer\Tests\Converter\ConfigFormatConverter\Source\SecondFakeClass;
use Migrify\ConfigTransformer\Tests\Converter\ConfigFormatConverter\Source\ThirdFakeClass;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Loader\Configurator\ContainerConfigurator;

return static function (ContainerConfigurator $containerConfigurator): void {
    $services = $containerConfigurator->services();

    $services->set(FakeClass::class)
        ->decorate('App\Mailer');

    $services->set(SecondFakeClass::class)
        ->decorate('App\Mailer', 'App\DecoratingMailer.wooz', 5, ContainerInterface::EXCEPTION_ON_INVALID_REFERENCE);

    $services->set(ThirdFakeClass::class)
        ->decorate('App\Mailer', null, 0, ContainerInterface::IGNORE_ON_INVALID_REFERENCE);
};
